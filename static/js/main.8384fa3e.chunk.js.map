{"version":3,"sources":["components/card.component/card.component.jsx","components/card-list.component/card-list.component.jsx","components/search.component/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","Search","handlechange","placeholder","type","onChange","App","handleChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","FilteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCHdC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJlBM,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,YAAhB,OAClB,qBAAKZ,UAAU,SAAf,SACI,uBAAOa,KAAK,SAASb,UAAU,YAAYY,YAAaA,EAAaE,SAAUH,OCoCxEI,G,wDAlCb,WAAYhB,GAAO,IAAD,8BAChB,cAAMA,IAcRiB,aAAe,SAAAC,GAAC,OACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJC,E,qDAQlB,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAQ3C,WAAS,IAAD,EAC4BC,KAAKN,MAA/Bd,EADF,EACEA,SAAUW,EADZ,EACYA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYc,wBAElD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAQY,YAAY,uBAAuBD,aAAciB,KAAKZ,eAC9D,cAAC,EAAD,CAAUR,SAAUqB,W,GA7BVK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8384fa3e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <h2>{props.monster.email}</h2>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card.component/card.component';\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n)","import React from 'react';\r\n\r\nexport const Search = ({handlechange, placeholder}) => (\r\n    <div className=\"search\">\r\n        <input type=\"search\" className=\"input-box\" placeholder={placeholder} onChange={handlechange} />\r\n    </div>\r\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list.component/card-list.component';\nimport { Search } from './components/search.component/search.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}));\n\n  }\n\n  handleChange = e => (\n    this.setState({ searchField: e.target.value })\n  )\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const FilteredMonsters = monsters.filter(monster => (\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    ))\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Search placeholder=\"search for a monster\" handlechange={this.handleChange} />\n        <CardList monsters={FilteredMonsters}></CardList>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}